/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StudentsIndexImport } from './routes/students/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as FacultyDashboardIndexImport } from './routes/faculty/dashboard/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudentsIndexRoute = StudentsIndexImport.update({
  id: '/students/',
  path: '/students/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const FacultyDashboardIndexRoute = FacultyDashboardIndexImport.update({
  id: '/faculty/dashboard/',
  path: '/faculty/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/admin/dashboard/',
  path: '/admin/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/students/': {
      id: '/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof StudentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/faculty/dashboard/': {
      id: '/faculty/dashboard/'
      path: '/faculty/dashboard'
      fullPath: '/faculty/dashboard'
      preLoaderRoute: typeof FacultyDashboardIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/students': typeof StudentsIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/faculty/dashboard': typeof FacultyDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/students': typeof StudentsIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/faculty/dashboard': typeof FacultyDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login/': typeof LoginIndexRoute
  '/students/': typeof StudentsIndexRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/faculty/dashboard/': typeof FacultyDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/students'
    | '/admin/dashboard'
    | '/faculty/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/students' | '/admin/dashboard' | '/faculty/dashboard'
  id:
    | '__root__'
    | '/'
    | '/login/'
    | '/students/'
    | '/admin/dashboard/'
    | '/faculty/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  StudentsIndexRoute: typeof StudentsIndexRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  FacultyDashboardIndexRoute: typeof FacultyDashboardIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  StudentsIndexRoute: StudentsIndexRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  FacultyDashboardIndexRoute: FacultyDashboardIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login/",
        "/students/",
        "/admin/dashboard/",
        "/faculty/dashboard/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/students/": {
      "filePath": "students/index.tsx"
    },
    "/admin/dashboard/": {
      "filePath": "admin/dashboard/index.tsx"
    },
    "/faculty/dashboard/": {
      "filePath": "faculty/dashboard/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
